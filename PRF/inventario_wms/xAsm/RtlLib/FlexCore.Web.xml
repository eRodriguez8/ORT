<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlexCore.Web</name>
    </assembly>
    <members>
        <member name="T:FlexCore.Web.WebSecProviderCk">
            <summary>
            Provider para el manejo de seguridad en aplicaciones Web
            Implementa lógica comun a todas ellas,
            y define métodos / props. virtuales para ser completadas en las clases derivadas
            </summary>
            <remarks>
            Esta implementación permite el uso del cookie para no requerir autenticacion Windows en cada request,
            y por lo tanto para permitir el uso de "Allow anonymous user" (además de Windows integrated security)
            El mecanismo es el siguiente:
            
            1) En todas las páginas (tipicamente en el evento Page_Init de la Master Page base general) se invoca
            a un metodo que realiza lo siguiente (cuando no es postback) :
             - si no existe el cookie o el mismo ha expirado, fuerza el envio de credenciales retornando 401
             - con las credenciales válidas reconstruye el cookie
             - si el cookie es válido utiliza esa combinacion de roles para validar el acceso a la página actual
             - adicionalmente conserva su info (username,roles) en un custom principal para usos posteriores en el mismo request
            
            2) Adicionalmente, cuando necesita obtener la lista de roles o el username en otros momentos
               (por ej. al evaluar los parametros de un cache) la invocacion realiza lo siguiente
             - si existe el custom principal creado en el punto 1, utiliza esa info
             - en caso contrario, utiliza la del cookie sin validar su expiración
            
            IMPORTANTE: 
             - No debe utilizarse solamente el punto 2 sin implementar tambien el 1
             - Este mecanismo reemplaza la validación de la seguridad mediante un HTTP module
            </remarks>
            <example>
            1) En el método Page_Init de la master page global:
            <code>
            if (!IsPostBack)
            {
                // Validates user credentials and checks required permissions for the current page
                string securityRestric = AppSecurity.Instance.GetPageRestric(this.Page, true);
                if (!AppSecurity.Instance.GetCurrentUserProfile().IsAuthorized(securityRestric))
                    throw new Exception("Unauthorized page: " + this.Page.Request.AppRelativeCurrentExecutionFilePath);
            }
            </code>
            
            2) En el método GetVaryByCustomString() de global.asax:
            <code>
            if (arg == "RolesList")
                {
                    return AppSecurity.Instance.GetCurrentUser().RolesList;
                }
             return base.GetVaryByCustomString(context, arg);
            </code>
            </example>
        </member>
        <member name="F:FlexCore.Web.WebSecProviderCk.profilesCache">
            <summary>
            Cache de perfiles de seguridad asociados a cada combinacion de roles
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.GetPageRestric(System.Web.UI.Control,System.Boolean)">
            <summary>
            Obtiene restricciones de seguridad para la página actual
            </summary>
            <returns>i.e. TABLAS:ABM</returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.ReplacePageRequirements(System.Web.UI.Control,System.String)">
            <summary>
            Reemplaza en el control que especifica la seguridad el segmento de "requiere" con otro valor, ej. "A" para alta
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.CreateSecProfile(System.Collections.Generic.IDictionary{System.String,System.Int16})">
            <summary>
            Instancia la clase que corresponda para un perfil de seguridad (SecProfile o derivada de la misma)
            </summary>
            <param name="accessControlList">Lista de permisos asociados a este perfil, obtenida de las clases de negocios</param>
            <returns></returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.GetCurrentUser">
            <summary>
            Obtiene información del usuario actual 
            </summary>
            <remarks>
            En aplicaciones web esto se obtiene para cada thread de ejecucion y se almacena temporalmente
            en un CustomPrincipal
            </remarks>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.GetCurrentUserProfile">
            <summary>
            Obtiene información del perfil de seguridad correspondiente al usuario actual
            </summary>
            En aplicaciones web la lista de roles se conserva en un cookie
            y con ese valor se obtiene la info del perfil a partir de un cache
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.GetCurrentPrincipal(System.Boolean)">
            <summary>
            Obtiene un custom principal correspondiente al usuario actual
            </summary>
            <remarks>
            La primera vez que se invoca en cada ejecucion, lo conserva en el CurrentPrincipal del thread de modo de no repetir el proceso cada vez
            Adicionalmente asigna un cookie con la lista de roles asociadas al usuario.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.ParseSecurityCookie(System.String,System.Boolean,System.String@)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.BuildSecurityCookie(System.String,System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.ToCookie(System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProviderCk.FromCookie(System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="T:FlexCore.Web.SimpleSiteMapProvider">
            <summary>
            Clase base para SiteMapProvider fijos (solo se invoca una vez el armado del arbol por cada instancia de esta clase)
            Debe implementarse el metodo LoadSiteMap()
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebMenuSiteMapProvider.AddChildNodes(System.Web.SiteMapNodeCollection,System.Int32,System.String)">
            <summary>
            Agrega al nodo las opciones de menu correspondientes al siguiente nivel
            para la clave dada
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebMenuSiteMapProvider.SkipChildNodes(System.Int32,System.String)">
            <summary>
            Saltea las opciones de menu correspondientes a los siguientes niveles
            para la clave dada
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebMenuSiteMapProvider.AddBranchNode(System.Web.SiteMapNodeCollection,System.Int32,FlexCore.Web.Option)">
            <summary>
            Procesa una opcion individual y sus hijos, agregandola o no al padre según los permisos requeridos
            </summary>
        </member>
        <member name="T:FlexCore.Web.JumpControl">
            <summary>
            Clase base para los controles de Jump
            Genera script para hacer un POST a otra página.
            </summary>
        </member>
        <member name="T:FlexCore.Web.ActionButton">
            <summary>
            Control de submit para accion, tipo botón
            </summary>
        </member>
        <member name="T:FlexCore.Web.JumpButton">
            <summary>
            Clase base para controles de submit tipo botón.
            </summary>
        </member>
        <member name="T:FlexCore.Web.ListPage">
            <summary>
            Clase base para páginas "principales" con grilla y navegación a páginas hijas (ActionControl),
            como las páginas de ABM.
            </summary>
        </member>
        <member name="M:FlexCore.Web.ListPage.SaveFiltersState(FlexCore.Web.SimpleDictionary)">
            <summary>
            En la implementación de este método debe guardarse en el pageState el valor de los filtros,
            (como strings) por ejemplo: 
                        pageState["FechaDesde"] = txtFecha.Text;
            </summary>
            <param name="pageState">Diccionario para guardar los valores</param>
        </member>
        <member name="M:FlexCore.Web.ListPage.LoadFiltersState(FlexCore.Web.SimpleDictionary)">
            <summary>
            En la implementación de este método debe recuperarse del pageState el valor de los filtros,
            (como strings); por ejemplo: 
                        txtFecha.Text = pageState["FechaDesde"];
            </summary>
            <remarks>Cuando se invoca a este método, el estado ya ha sido guardado previamente</remarks>
            <param name="pageState">Diccionario con los valores</param>
        </member>
        <member name="M:FlexCore.Web.ListPage.PreparePage(FlexCore.Web.ListPage.Option,System.Web.UI.WebControls.GridView,FlexCore.Web.BizDataSource,FlexCore.Web.ActionControl)">
            <summary>
            Preparacion de la clase base
            Debe ser invocado en el Page_Init de la página de grilla Abm
            </summary>
            <param name="options"></param>
            <param name="grdMain">Puede pasarse null si no se quiere guardar info de orden y paginación</param>
            <param name="bizDataSource"></param>
            <param name="actionControl"></param>
        </member>
        <member name="M:FlexCore.Web.ListPage.OnGetButtonClick">
            <summary>
            Realiza el procesamiento correspondiente al boton Traer 
            </summary>
        </member>
        <member name="P:FlexCore.Web.ListPage.Options">
            <summary>
            Opciones especificadas en IniciarPage
            </summary>
        </member>
        <member name="P:FlexCore.Web.ListPage.ActionControl">
            <summary>
            Referencia al action control 
            </summary>
        </member>
        <member name="P:FlexCore.Web.ListPage.PageState">
            <summary>
            Referencia al PageState en el action control
            </summary>
        </member>
        <member name="P:FlexCore.Web.ListPage.IsReload">
            <summary>
            True si no es postback, pero recupera PageState conservado previamente
            </summary>
        </member>
        <member name="T:FlexCore.Web.ListPage.Option">
            <summary>
            Opciones de procesamiento del ABM
            </summary>
        </member>
        <member name="F:FlexCore.Web.ListPage.Option.Default">
            <summary>
            ABM con opciones default (filtros, boton traer, etc)
            </summary>
        </member>
        <member name="F:FlexCore.Web.ListPage.Option.LoadWithDefaultFilters">
            <summary>
            Al mostrar la página ejecutar la búsqueda con las opciones default
            </summary>
        </member>
        <member name="F:FlexCore.Web.ListPage.Option.NoFilters">
            <summary>
            Esta página no tiene filtros
            </summary>
        </member>
        <member name="T:FlexCore.Web.ActionControl">
            <summary>
            Control de "jump" para navegar hacia una pagina de accion (ej. en un ActionLink)
            </summary>
            <remarks>
            Los controles de "jump" generan script para hacer un POST a otra página.
            </remarks>
        </member>
        <member name="T:FlexCore.Web.BizDataSource">
            <summary>
            Object Data Source modificado para uso con los objetos Biz propios (o servicios)
            La invocacion al Biz se realiza capturando el evento (default) GetData de este control.  Alli debe asignarse un IEnumerable a la propiedad e.Result
            Para utilizarlo con clases definidas (entidades o datasets tipados), puede asociarselo en tiempo de diseño a cualquier clase con un método que tenga el retorno adecuado, pero ese objeto no se instancia (ni el método se invoca) ya que solo lo utiliza en tiempo de diseño.
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSource.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSource.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSource.RestoreGridParameters(System.Web.UI.WebControls.GridView,FlexCore.Web.SimpleDictionary)">
            <summary>
            Recupera los parámetros conservados previamente en un ActionControl,
            y los reasigna a la grilla especificada
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSource.SaveGridParameters(System.Web.UI.WebControls.GridView,FlexCore.Web.SimpleDictionary)">
            <summary>
            Conserva en un ActionControl los parámetros actuales de la grilla especificada
            </summary>
        </member>
        <member name="P:FlexCore.Web.BizDataSource.Enabled">
            <summary>
            Realizar o no la invocacion a GetData y el binding.
            </summary>
        </member>
        <member name="E:FlexCore.Web.BizDataSource.GetData">
            <summary>
            Evento a interceptar para obtener los datos (asignar en e.Result)
            </summary>
        </member>
        <member name="T:FlexCore.Web.GetDataEventArgs">
            <summary>
            Definicion de argumentos para el evento GetData
            </summary>
        </member>
        <member name="T:FlexCore.Web.GetDataEventHandler">
            <summary>
            Definicion del event handler (delegado) para el evento GetData
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSourceView.#ctor(FlexCore.Web.BizDataSource,System.String,System.Web.HttpContext)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)">
            <summary>
            Traer los datos
            </summary>
        </member>
        <member name="M:FlexCore.Web.BizDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Invocar al método y evento que traen los datos
            </summary>
        </member>
        <member name="T:FlexCore.Web.IDataMasterPage">
            <summary>
            Interfaz para master pages que contienen una seccion Datos 
            con manejo general de mensajes de error para validaciones, etc.
            </summary>
        </member>
        <member name="M:FlexCore.Web.IDataMasterPage.DisplayError(System.String)">
            <summary>
            Muestra información de error en la página
            (puede invocarse varias veces para reportar varios errores)
            </summary>
            <param name="message">Texto a mostrar (una linea)</param>
            <returns>False</returns>
        </member>
        <member name="M:FlexCore.Web.IDataMasterPage.ClearError">
            <summary>
            Oculta todos los errorse mostrados en la página
            </summary>
        </member>
        <member name="T:FlexCore.Web.MenuInfo">
            <summary>
            Clase que define la coleccion de items de menu
            para leer el archivo menu.xml
            </summary>
        </member>
        <member name="P:FlexCore.Web.MenuInfo.Items">
            <remarks/>
        </member>
        <member name="T:FlexCore.Web.Option">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.id">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.text">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.help">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.url">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.module">
            <remarks/>
        </member>
        <member name="P:FlexCore.Web.Option.requires">
            <remarks/>
        </member>
        <member name="T:FlexCore.Web.ActionLink">
            <summary>
            Control de submit para accion, tipo link
            </summary>
        </member>
        <member name="T:FlexCore.Web.JumpLink">
            <summary>
            Clase base para controles de submit tipo link.
            </summary>
        </member>
        <member name="M:FlexCore.Web.ControlHelper.SearchForControl(System.Web.UI.Control,System.String)">
            <summary>
            Recursively look for a control (FindControl doesn't)
            </summary>
        </member>
        <member name="M:FlexCore.Web.ControlHelper.SetReadOnly(System.Web.UI.Control)">
            <summary>
            Pasa recursivamente los controles hijos a modo "read only" (o disabled, segun el control)
            </summary>
        </member>
        <member name="M:FlexCore.Web.ControlHelper.SeleccionarValorComboConNulo(System.Web.UI.WebControls.DropDownList,System.Object)">
            <summary>
            Selecciona el item del combo que corresponda al valor especificado
            Previamente agrega una opcion en blanco al principio de la lista (si no existe)
            </summary>
        </member>
        <member name="M:FlexCore.Web.ControlHelper.SelectListValue(System.Web.UI.WebControls.ListControl,System.Object)">
            <summary>
            Selecciona el item de la lista (ListBox, DropDownList,etc)
            que corresponda al valor especificado.
            Si no existe no hace nada
            </summary>
        </member>
        <member name="M:FlexCore.Web.ControlHelper.GetPostBackControl(System.Web.UI.Page)">
            <summary>
            Busca en la página especificada el control que realizó el postback
            </summary>
        </member>
        <member name="T:FlexCore.Web.WebSecProvider">
            <summary>
            Provider para el manejo de seguridad en aplicaciones Web
            Implementa lógica comun a todas ellas,
            y define métodos / props. virtuales para ser completadas en las clases derivadas
            </summary>
        </member>
        <member name="F:FlexCore.Web.WebSecProvider.profilesCache">
            <summary>
            Cache de perfiles de seguridad asociados a cada combinacion de roles
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.GetPageRestric(System.Web.UI.Control,System.Boolean)">
            <summary>
            Obtiene restricciones de seguridad para la página actual
            </summary>
            <returns>i.e. TABLAS:ABM</returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.ReplacePageRequirements(System.Web.UI.Control,System.String)">
            <summary>
            Reemplaza en el control que especifica la seguridad el segmento de "requiere" con otro valor, ej. "A" para alta
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.CreateSecProfile(System.Collections.Generic.IDictionary{System.String,System.Int16})">
            <summary>
            Instancia la clase que corresponda para un perfil de seguridad (SecProfile o derivada de la misma)
            </summary>
            <param name="accessControlList">Lista de permisos asociados a este perfil, obtenida de las clases de negocios</param>
            <returns></returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.GetCurrentUser">
            <summary>
            Obtiene información del usuario actual
            </summary>
            <remarks>
            En aplicaciones web esto se obtiene para cada thread de ejecucion y se almacena temporalmente
            en un CustomPrincipal
            </remarks>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.GetCurrentUserProfile">
            <summary>
            Obtiene información del perfil de seguridad correspondiente al usuario actual
            </summary>
            En aplicaciones web la lista de roles se conserva en un cookie
            y con ese valor se obtiene la info del perfil a partir de un cache
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.GetCurrentPrincipal">
            <summary>
            Obtiene un custom principal correspondiente al usuario actual
            </summary>
            <remarks>
            La primera vez que se invoca en cada ejecucion, lo conserva en el CurrentPrincipal del thread de modo de no repetir el proceso cada vez
            Adicionalmente asigna un cookie con la lista de roles asociadas al usuario.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.ParseSecurityCookie(System.String,System.String@)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.BuildSecurityCookie(System.String,System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.ToCookie(System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="M:FlexCore.Web.WebSecProvider.FromCookie(System.String)">
            <summary>
            Método de uso interno
            </summary>
        </member>
        <member name="T:FlexCore.Web.WebSecProfile">
            <summary>
            Perfil de seguridad correspondiente a una combinación de roles, para aplicaciones Web
            Contiene información sobre los permisos de accesos correspondientes al perfil
            </summary>
            <remarks>
            En esta implementación para aplicaciones Web, tambien contiene un datasource con las opciones de menú habilitadas de modo de evitar su recálculo
            </remarks>
        </member>
        <member name="M:FlexCore.Web.WebSecProfile.#ctor(System.Collections.Generic.IDictionary{System.String,System.Int16})">
            <summary>
            Constructor público
            </summary>
            <param name="accessControlList">Lista de permisos, obtenida previamente</param>
        </member>
        <member name="P:FlexCore.Web.WebSecProfile.MenuDataSource">
            <summary>
            DataSource para el menu de la aplicacion web, filtrado segun los permisos del perfil
            </summary>
        </member>
        <member name="T:WebCustomPrincipal">
            <summary>
            Clase Principal especializada, almacena informacion adicional de roles
            </summary>
        </member>
        <member name="F:WebCustomPrincipal.RolesList">
            <summary>
            Lista de roles delimitada por comas, ej. "AD,CO,RE"
            </summary>
        </member>
        <member name="T:FlexCore.Web.SimpleDictionary">
            <summary>
            Diccionario simple para almacenar strings (name/value) y serializarlos como un único string
            </summary>
        </member>
        <member name="M:FlexCore.Web.SimpleDictionary.GetValue(System.String,System.String)">
            <summary>
            Obtiene un valor del diccionario, o el indicado como default si no existe
            </summary>
            <param name="key">Clave a buscar</param>
            <param name="defaultValue">Valor a retornar si no existe</param>
            <returns>El valor solicitado</returns>
        </member>
        <member name="P:FlexCore.Web.SimpleDictionary.Item(System.String)">
            <summary>
            Indexador principal, para acceder por nombre de la clave
            </summary>
            <param name="key">Clave a buscar</param>
            <returns>El valor almacenado, o null si no existe</returns>
        </member>
        <member name="T:FlexCore.Web.HttpHelper">
            <summary>
            Clase helper para tareas generales relacionadas con HTTP
            </summary>
        </member>
        <member name="M:FlexCore.Web.HttpHelper.ReturnExcelFile(System.Web.HttpResponse,System.Byte[],System.String)">
            <summary>
            Se utiliza para devolver un planilla Excel desde una página web.
            </summary>
        </member>
        <member name="T:FlexCore.Web.BackControl">
            <summary>
            Control de "jump" para retornar a la página que invocó a la actual, via HTTP POST
            </summary>
            <remarks>
            Los controles de Submit generan script para hacer un POST a otra página.
            </remarks>
        </member>
        <member name="T:FlexCore.Web.BackButton">
            <summary>
            Control de submit (tipo botón) para volver atrás.
            </summary>
        </member>
        <member name="T:FlexCore.Web.CrudDataPageIDataMP">
            <summary>
            OBSOLETA - Utilizar CrudDataPage en vez.
            Clase base que puede emplearse en las páginas de Datos para Alta, Baja, Modif o Consulta
            basadas en una master page de datos con determinados nombres de controles y logica en la clase MPageDatos
            </summary>
        </member>
        <member name="T:FlexCore.Web.CrudDataPage">
            <summary>
            Clase base de las páginas de Datos para Alta, Baja, Modif o Consulta
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.PreparePage(FlexCore.Common.ICrudController,FlexCore.Web.BackControl,System.Web.UI.WebControls.ListControl,System.Web.UI.Control)">
            <summary>
            Preparacion de la clase base
            Debe ser invocado en el Page_Init de la página de Abm
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.PreparePage(FlexCore.Common.ICrudController,FlexCore.Web.BackControl,System.Web.UI.WebControls.ListControl,System.Web.UI.Control[])">
            <summary>
            Preparacion de la clase base
            Debe ser invocado en el Page_Init de la página de Abm
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.OnLoad(System.EventArgs)">
            <summary>
            Procesamiento en la carga de la página
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.GetKeyFromRequest">
            <summary>
            Genera un objeto ID para la entidad a partir del request.
            La implementacion default verifica si existe Request["Id"], y retorna 
            ese valor (convertido al tipo de la clave mediante el metodo ParseKey del CrudController)
            o bien null si no existe
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.ParseCrudAction(System.Char)">
            <summary>
            Procesamiento default para analizar el parametro "Accion" recibido en el request, 
            y asignar la estructura InfoAccion correspondiente.
            </summary>
            <param name="accionRequest">Valor del parámetro "Accion" recibido en el Request</param>
            <returns>La estructura completa de información de la acción</returns>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.OnPreRender(System.EventArgs)">
            <summary>
            Procesamiento en PreRender: muestra los controles
            </summary>
            
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.PersistEntityState">
            <summary>
            Conserva información de la entidad en los controles y/o el ViewState (u otro mecanismo).
            Si no se reemplaza este método, el procesamiento default guarda la informacion en ViewState
            por lo cual la entidad debe estar marcada como [Serializable] y no contener excesiva informacion 
            que sea demasiado costoso serializar y enviar al cliente.
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.CompletarPreparacionControles">
            <summary>
            [opcional] Termina la preparación de los controles con las tareas que deban hacerse DESPUES de haber guardado el estado de la entidad
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.MostrarDatosEntidadEnControles">
            <summary>
            Mostrar datos de la entidad en los controles de la página, y persistir lo que sea necesario en ViewState
            Este método debe implementarse en las clases derivadas.
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.LoadEntityState(System.Object@,System.Object@)">
            <summary>
            Reconstruir los datos de la entidad preservada previamente
            Si no se reemplaza este método, el procesamiento default recupera la informacion guardada en ViewState
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.ValidarPaginaYActualizarDatosEntidad">
            <summary>
            Validar la página completa y actualizar los datos de la entidad 
            con los valores presentes en los controles
            Este método debe implementarse en las clases derivadas.
            </summary>
            <remarks>
            Los errores detectados en la validacion pueden reportarse invocando a InformarError()
            Este método siempre retorna false, de modo de poder invocarlo en el mismo comando:
            ej.: return InformarError(".....");
            </remarks>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.ProcesarBotonAceptar">
            <summary>
            Realiza el procesamiento correspondiente a un boton de aceptar,
            en base a la accion definida en la página (InfoAccion).
            Retorna false si no pasó las validaciones, true en caso contrario.
            Esto permite invocar el procesamiento default desde otras acciones custom,
            y realizar solamente las acciones específicas.
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.PostAceptar">
            <summary>
            Permite agregar código depues de grabar los datos.
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.DisplayError(System.String)">
            <summary>
            Invocado desde las páginas derivadas, muestra información de error en la página
            (puede invocarse varias veces para reportar varios errores)
            </summary>
            <param name="texto">Texto a mostrar (una linea)</param>
        </member>
        <member name="M:FlexCore.Web.CrudDataPage.ClearError">
            <summary>
            Vacía la información de error en la página
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudDataPage.CrudActionInfo">
            <summary>
            Informacion sobre accion a realizar en la página (A,B,M,etc)
            Se asigna a partir de los argumentos del Request
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudDataPage.BackControl">
            <summary>
            Referencia al back control 
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudDataPage.RefreshControls">
            <summary>
            Marca de que en PreRender debe realizarse la preparación y databinding de los controles
            y tambien conservar nuevamente el estado de la entidad
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudDataPage.crudController">
            <summary>
            Clase del controlador para operaciones CRUD
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPageIDataMP.PreparePage(FlexCore.Common.ICrudController,FlexCore.Web.BackControl)">
            <summary>
            Preparacion de la clase base
            Debe ser invocado en el Page_Init de la página de Abm
            </summary>
        </member>
        <member name="M:FlexCore.Web.CrudDataPageIDataMP.DisplayError(System.String)">
            <summary>
            Invocado desde las páginas derivadas, muestra información de error en la página
            (puede invocarse varias veces para reportar varios errores)
            </summary>
            <param name="texto">Texto a mostrar (una linea)</param>
        </member>
        <member name="M:FlexCore.Web.CrudDataPageIDataMP.ClearError">
            <summary>
            Vacía la información de error en la página
            </summary>
        </member>
        <member name="T:FlexCore.Web.CrudActionInfo">
            <summary>
            Informacion sobre accion a realizar en la página (A,B,M,etc)
            Se asigna a partir de los argumentos del Request
            </summary>
            <remarks>En páginas de ABM puede utilizarse una clase derivada de esta (que contenga información adicional),
            en ese caso recordar marcarla como [Serializable].
            Si se reciben otros parametros (ej. Copiar) pero estos se procesan como una accion existente (ej. Alta)
            no es necesario reemplazar esta clase</remarks>
        </member>
        <member name="P:FlexCore.Web.CrudActionInfo.ActionCode">
            <summary>
            Letra de la accion recibida como param. del request: 'A','B','M','C' u otras específicas de la página
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudActionInfo.IsCreate">
            <summary>
            True si la accion al aceptar es Insertar la entidad
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudActionInfo.IsDelete">
            <summary>
            True si la accion al aceptar es Eliminar la entidad
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudActionInfo.IsUpdate">
            <summary>
            True si la accion al aceptar es Modificar la entidad
            </summary>
        </member>
        <member name="P:FlexCore.Web.CrudActionInfo.ReadOnly">
            <summary>
            True si los datos no pueden editarse (ej. baja o consulta)
            </summary>
        </member>
    </members>
</doc>
